[{"/Users/lee/Flatiron/code2/bookclubfrontend/src/index.js":"1","/Users/lee/Flatiron/code2/bookclubfrontend/src/App.js":"2","/Users/lee/Flatiron/code2/bookclubfrontend/src/Header.js":"3","/Users/lee/Flatiron/code2/bookclubfrontend/src/Nav.js":"4","/Users/lee/Flatiron/code2/bookclubfrontend/src/Login/Login.js":"5","/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/ClubSearch.js":"6","/Users/lee/Flatiron/code2/bookclubfrontend/src/BookSearch/BookSearch.js":"7","/Users/lee/Flatiron/code2/bookclubfrontend/src/MyClubs/MyClubs.js":"8","/Users/lee/Flatiron/code2/bookclubfrontend/src/Profile/Profile.js":"9","/Users/lee/Flatiron/code2/bookclubfrontend/src/Login/LoginForm.js":"10","/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/ClubCard.js":"11","/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/ClubForm.js":"12","/Users/lee/Flatiron/code2/bookclubfrontend/src/BookSearch/BookCard.js":"13","/Users/lee/Flatiron/code2/bookclubfrontend/src/BookSearch/BookReview.js":"14","/Users/lee/Flatiron/code2/bookclubfrontend/src/BookSearch/ReviewCard.js":"15","/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/ClubMeeting.js":"16","/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/MeetingCard.js":"17","/Users/lee/Flatiron/code2/bookclubfrontend/src/Profile/ProfileCard.js":"18"},{"size":262,"mtime":1612744228302,"results":"19","hashOfConfig":"20"},{"size":4422,"mtime":1613673253099,"results":"21","hashOfConfig":"20"},{"size":210,"mtime":1613575104312,"results":"22","hashOfConfig":"20"},{"size":959,"mtime":1613680587547,"results":"23","hashOfConfig":"20"},{"size":228,"mtime":1613580134514,"results":"24","hashOfConfig":"20"},{"size":632,"mtime":1613578182886,"results":"25","hashOfConfig":"20"},{"size":404,"mtime":1613578319292,"results":"26","hashOfConfig":"20"},{"size":133,"mtime":1612849989615,"results":"27","hashOfConfig":"20"},{"size":849,"mtime":1613680933498,"results":"28","hashOfConfig":"20"},{"size":1337,"mtime":1613680845638,"results":"29","hashOfConfig":"20"},{"size":643,"mtime":1613582451034,"results":"30","hashOfConfig":"20"},{"size":3178,"mtime":1613585468395,"results":"31","hashOfConfig":"20"},{"size":876,"mtime":1613578482029,"results":"32","hashOfConfig":"20"},{"size":2723,"mtime":1613585448796,"results":"33","hashOfConfig":"20"},{"size":2105,"mtime":1613585493360,"results":"34","hashOfConfig":"20"},{"size":3264,"mtime":1613585479753,"results":"35","hashOfConfig":"20"},{"size":337,"mtime":1612924783783,"results":"36","hashOfConfig":"20"},{"size":2079,"mtime":1613680948781,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"15othy6",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lee/Flatiron/code2/bookclubfrontend/src/index.js",[],["81","82"],"/Users/lee/Flatiron/code2/bookclubfrontend/src/App.js",[],"/Users/lee/Flatiron/code2/bookclubfrontend/src/Header.js",[],"/Users/lee/Flatiron/code2/bookclubfrontend/src/Nav.js",[],"/Users/lee/Flatiron/code2/bookclubfrontend/src/Login/Login.js",[],"/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/ClubSearch.js",[],"/Users/lee/Flatiron/code2/bookclubfrontend/src/BookSearch/BookSearch.js",[],"/Users/lee/Flatiron/code2/bookclubfrontend/src/MyClubs/MyClubs.js",[],"/Users/lee/Flatiron/code2/bookclubfrontend/src/Profile/Profile.js",[],"/Users/lee/Flatiron/code2/bookclubfrontend/src/Login/LoginForm.js",[],"/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/ClubCard.js",["83","84","85"],"import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nfunction ClubCard({club, onClubClick}){\n\n    const {id, description, genre, owner_id, title} = club\n\n    function handleClick(e){\n        e.preventDefault()\n        onClubClick(club)\n    }\n\n    return(\n        <div className=\"club-card\">\n             <div>\n                 <h3>{title}</h3>\n             </div>\n             <div>\n                 <p>{description}</p>\n             </div>\n             <div>\n                 <h5>{genre}</h5>\n             </div>\n             <button onClick={handleClick}>See Meetings</button>\n        </div>\n    )\n}\nexport default ClubCard;","/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/ClubForm.js",["86"],"import React,{useState} from 'react';\nimport {useHistory} from 'react-router-dom';\n\nfunction ClubForm({user, onNewClub, clubs, setClubs}) {\n\n    const userId = user[0].id\n\n    const [title, setTitle] = useState('')\n    const [genre, setGenre] = useState('')\n    const [description, setDescription] = useState('')\n    const [ownerNumber, setOwnerNumber] = useState(userId)\n    const history = useHistory()\n\n    const formData = {title, genre, description, owner_id: ownerNumber}\n\n    function handleSubmit(event){\n        event.preventDefault()\n\n        fetch(\"http://localhost:3001/api/v1/clubs\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        })\n        .then(r => r.json())\n        .then((newClub) => {\n            setClubs([...clubs,newClub])\n            alert('Club created!')\n            history.push('/clubsearch')\n        })\n    }\n\n    return(\n        <div>\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <label>Title</label>\n                            </td>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    value={title}\n                                    placeholder=\"Cool Cats\"\n                                    onChange={(e) => setTitle(e.target.value)}\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label>Genre</label>\n                            </td>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    name=\"genre\"\n                                    value={genre}\n                                    placeholder=\"Science Fiction\"\n                                    onChange={(e) => setGenre(e.target.value)}\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label>Description</label>\n                            </td>\n                            <td>\n                                <input\n                                    type=\"textarea\"\n                                    name=\"description\"\n                                    valeu={description}\n                                    placeholder=\"This club reads science fiction books every Tuesday!\"\n                                    onChange={(e) => setDescription(e.target.value)}\n                                />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <input type=\"submit\" value=\"Create Club\" />\n            </form>\n        </div>\n    )\n}\nexport default ClubForm;","/Users/lee/Flatiron/code2/bookclubfrontend/src/BookSearch/BookCard.js",["87","88","89"],"import React from 'react';\nimport BookReview from './BookReview'\nimport {NavLink} from'react-router-dom'\n\nfunction BookCard({book, onBookClick, user}){\n\n    const {id, description, genre, author, title} = book\n\n    function handleClick(e){\n        e.preventDefault()\n        onBookClick(book)\n        console.log(book)\n    }\n\n    return(\n        <div className=\"book-card\">\n             <div>\n                 <h3>{title}</h3>\n             </div>\n             <div>\n                 <h3>{author}</h3>\n             </div>\n             <div>\n                 <h5>{description}</h5>\n             </div>\n             <div>\n                 <h5>{genre}</h5>\n             </div>\n             {/* <NavLink exact to=\"/booksearch/:id\"> */}\n                <button onClick={handleClick}>See Reviews</button>\n            {/* </NavLink> */}\n        </div>\n    )\n}\nexport default BookCard;","/Users/lee/Flatiron/code2/bookclubfrontend/src/BookSearch/BookReview.js",["90"],"import React, {useState} from 'react';\nimport ReviewCard from './ReviewCard'\nimport {useHistory} from 'react-router-dom';\n\nfunction BookReview({user, book, reviews, allUsers, setReviews, onDeleteReview}){\n\n    const history = useHistory()\n    const filteredReviews = reviews.filter((review) => review.book_id === book.id)\n\n    const reviewComponents = filteredReviews.map((review) => \n        <ReviewCard\n        key={review.id}\n        review={review}\n        allUsers={allUsers}\n        user_id={review.user_id}\n        book_id={review.book_id}\n        currentUser={user}\n        onDeleteReview={onDeleteReview}\n        />\n    )\n    const userId = user[0].id\n    const [review, setReview] = useState('')\n    const formData = {user_id: userId, book_id: book.id, review}\n\n\n    function handleSubmit(event){\n        event.preventDefault()\n        fetch(\"http://localhost:3001/api/v1/reviews\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        })\n        .then(r => r.json())\n        .then((newReview) => {\n            setReviews([...reviews,newReview])\n            alert('Review Created!')\n        })\n    }\n\n    return(\n        <div>\n            <div>\n            {book.title}\n            </div>\n            <div>\n            {book.author}\n            </div>\n            <div>\n            {book.publisher}\n            </div>\n            <div>\n            {book.genre}\n            </div>\n            <br/>\n            <br/>\n            <h2>Reviews:</h2>\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\n                <table>\n                    <tbody>\n                    \n                        <tr>\n                            <td>\n                                <h4>Leave a Review!</h4>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label>Review</label>\n                            </td>\n                            <td>\n                                <input\n                                    type=\"textarea\"\n                                    name=\"review\"\n                                    value={review}\n                                    placeholder=\"Neat read!\"\n                                    onChange={(e) => setReview(e.target.value)}\n                                />\n                            </td>\n                        </tr>  \n                    </tbody>\n                </table>\n                <input type=\"submit\" value=\"Leave Review\" />\n            </form>\n            {reviewComponents}\n        </div>\n    )\n}\n\nexport default BookReview;","/Users/lee/Flatiron/code2/bookclubfrontend/src/BookSearch/ReviewCard.js",[],"/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/ClubMeeting.js",["91"],"import React,{useState} from 'react'\nimport MeetingCard from './MeetingCard'\nimport {useHistory} from 'react-router-dom';\n\nfunction ClubMeeting({currentClub, user, allUsers, meetings, setMeetings, clubs}){\n    \n    const history = useHistory()\n    const filteredMeetings = meetings.filter((meeting) => meeting.club_id === currentClub.id)\n\n    const meetingComponents = filteredMeetings.map((meeting) => \n        <MeetingCard\n        key={meeting.id}\n        description={meeting.description}\n        allUsers={allUsers}\n        club_id={meeting.club_id}\n        zoom={meeting.zoom}\n        clubs={clubs}\n        />\n    )\n    const userId = user[0].id\n    const [zoom, setZoom] = useState('')\n    const [description, setDescription] = useState('')\n    const formData = {user_id: userId, club_id: currentClub.id, zoom, description}\n\n\n    function handleSubmit(event){\n        event.preventDefault()\n        fetch(\"http://localhost:3001/api/v1/meetings\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        })\n        .then(r => r.json())\n        .then((newMeeting) => {\n            setMeetings([...meetings,newMeeting])\n            alert('Meeting Created!')\n        })\n    }\n\n    return(\n        <div>\n            <div>\n            <h1>{currentClub.title} Meetings</h1>\n            </div>\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <h4>\n                                    Create a Meeting!\n                                </h4>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label>Zoom link</label>\n                            </td>\n                            <td>\n                                <input\n                                type=\"text\"\n                                name=\"zoom\"\n                                value={zoom}\n                                placeholder=\"zoom.com/link\"\n                                onChange={(e) => setZoom(e.target.value)}\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label> Description</label>\n                            </td>\n                            <td>\n                                <input\n                                    type=\"textarea\"\n                                    name=\"description\"\n                                    value={description}\n                                    placeholder=\"Going over Chapter 1 :)\"\n                                    onChange={(e) => setDescription(e.target.value)}\n                                />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <input type=\"submit\" value=\"Create Meeting\" />\n            </form>\n            <h2>Meetings:</h2>\n            {meetingComponents}\n        </div>\n    )\n}\nexport default ClubMeeting;","/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/MeetingCard.js",["92"],"import React from 'react';\n\nfunction MeetingCard({allUsers, description, club_id, zoom, clubs}){\n    const club = clubs.filter((singleClub) => singleClub.id === club_id)\n\n    return(\n        <div>\n            <h5>{zoom}</h5>\n            {description}\n            <br/>\n            <br/>\n        </div>\n    )\n}\nexport default MeetingCard;","/Users/lee/Flatiron/code2/bookclubfrontend/src/Profile/ProfileCard.js",["93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":9,"nodeType":"100","messageId":"101","endLine":2,"endColumn":16},{"ruleId":"98","severity":1,"message":"102","line":6,"column":12,"nodeType":"100","messageId":"101","endLine":6,"endColumn":14},{"ruleId":"98","severity":1,"message":"103","line":6,"column":36,"nodeType":"100","messageId":"101","endLine":6,"endColumn":44},{"ruleId":"98","severity":1,"message":"104","line":11,"column":25,"nodeType":"100","messageId":"101","endLine":11,"endColumn":39},{"ruleId":"98","severity":1,"message":"105","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":3,"column":9,"nodeType":"100","messageId":"101","endLine":3,"endColumn":16},{"ruleId":"98","severity":1,"message":"102","line":7,"column":12,"nodeType":"100","messageId":"101","endLine":7,"endColumn":14},{"ruleId":"98","severity":1,"message":"106","line":7,"column":11,"nodeType":"100","messageId":"101","endLine":7,"endColumn":18},{"ruleId":"98","severity":1,"message":"106","line":7,"column":11,"nodeType":"100","messageId":"101","endLine":7,"endColumn":18},{"ruleId":"98","severity":1,"message":"107","line":4,"column":11,"nodeType":"100","messageId":"101","endLine":4,"endColumn":15},{"ruleId":"98","severity":1,"message":"108","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":16},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'owner_id' is assigned a value but never used.","'setOwnerNumber' is assigned a value but never used.","'BookReview' is defined but never used.","'history' is assigned a value but never used.","'club' is assigned a value but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]