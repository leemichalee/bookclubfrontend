{"ast":null,"code":"var _jsxFileName = \"/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/ClubMeeting.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MeetingCard from './MeetingCard';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ClubMeeting({\n  currentClub,\n  user,\n  allUsers,\n  meetings,\n  setMeetings,\n  clubs\n}) {\n  _s();\n\n  const history = useHistory();\n  const filteredMeetings = meetings.filter(meeting => meeting.club_id === currentClub.id);\n  const meetingComponents = filteredMeetings.map(meeting => /*#__PURE__*/_jsxDEV(MeetingCard, {\n    description: meeting.description,\n    allUsers: allUsers,\n    club_id: meeting.club_id,\n    zoom: meeting.zoom,\n    clubs: clubs\n  }, meeting.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this));\n  const userId = user[0].id;\n  const [zoom, setZoom] = useState('');\n  const [description, setDescription] = useState('');\n  const formData = {\n    user_id: userId,\n    club_id: currentClub.id,\n    zoom,\n    description\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:3001/api/v1/meetings\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(r => r.json()).then(newMeeting => {\n      setMeetings([...meetings, newMeeting]);\n      alert('Meeting Created!');\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentClub.title, \" Meetings\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Meetings:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Create a Meeting!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Zoom link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"zoom\",\n                value: zoom,\n                placeholder: \"zoom.com/link\",\n                onChange: e => setZoom(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \" Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"textarea\",\n                name: \"description\",\n                value: description,\n                placeholder: \"Going over Chapter 1 :)\",\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), meetingComponents]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ClubMeeting, \"dxXr4rnlTnixyUe5+nAdNDdNpgI=\", false, function () {\n  return [useHistory];\n});\n\n_c = ClubMeeting;\nexport default ClubMeeting;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClubMeeting\");","map":{"version":3,"sources":["/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/ClubMeeting.js"],"names":["React","useState","MeetingCard","useHistory","ClubMeeting","currentClub","user","allUsers","meetings","setMeetings","clubs","history","filteredMeetings","filter","meeting","club_id","id","meetingComponents","map","description","zoom","userId","setZoom","setDescription","formData","user_id","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","newMeeting","alert","title","e","target","value"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport MeetingCard from './MeetingCard'\nimport {useHistory} from 'react-router-dom';\n\nfunction ClubMeeting({currentClub, user, allUsers, meetings, setMeetings, clubs}){\n    \n    const history = useHistory()\n    const filteredMeetings = meetings.filter((meeting) => meeting.club_id === currentClub.id)\n\n    const meetingComponents = filteredMeetings.map((meeting) => \n        <MeetingCard\n        key={meeting.id}\n        description={meeting.description}\n        allUsers={allUsers}\n        club_id={meeting.club_id}\n        zoom={meeting.zoom}\n        clubs={clubs}\n        />\n    )\n    const userId = user[0].id\n    const [zoom, setZoom] = useState('')\n    const [description, setDescription] = useState('')\n    const formData = {user_id: userId, club_id: currentClub.id, zoom, description}\n\n\n    function handleSubmit(event){\n        event.preventDefault()\n        fetch(\"http://localhost:3001/api/v1/meetings\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        })\n        .then(r => r.json())\n        .then((newMeeting) => {\n            setMeetings([...meetings,newMeeting])\n            alert('Meeting Created!')\n        })\n    }\n\n    return(\n        <div>\n            <div>\n            {currentClub.title} Meetings\n            </div>\n            <h2>Meetings:</h2>\n            <form onSubmit={handleSubmit}>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <h4>\n                                    Create a Meeting!\n                                </h4>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label>Zoom link</label>\n                            </td>\n                            <td>\n                                <input\n                                type=\"text\"\n                                name=\"zoom\"\n                                value={zoom}\n                                placeholder=\"zoom.com/link\"\n                                onChange={(e) => setZoom(e.target.value)}\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label> Description</label>\n                            </td>\n                            <td>\n                                <input\n                                    type=\"textarea\"\n                                    name=\"description\"\n                                    value={description}\n                                    placeholder=\"Going over Chapter 1 :)\"\n                                    onChange={(e) => setDescription(e.target.value)}\n                                />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <input type=\"submit\" value=\"Create Meeting\" />\n            </form>\n            {meetingComponents}\n        </div>\n    )\n}\nexport default ClubMeeting;"]},"metadata":{},"sourceType":"module"}