{"ast":null,"code":"var _jsxFileName = \"/Users/lee/Flatiron/code2/bookclubfrontend/src/BookSearch/BookReview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReviewCard from './ReviewCard';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookReview({\n  user,\n  book,\n  reviews,\n  allUsers,\n  onReview,\n  setReviews\n}) {\n  _s();\n\n  const history = useHistory();\n  const filteredReviews = reviews.filter(review => review.book_id === book.id);\n  const reviewComponents = filteredReviews.map(review => /*#__PURE__*/_jsxDEV(ReviewCard, {\n    review: review.review,\n    allUsers: allUsers,\n    user_id: review.user_id,\n    book_id: review.book_id\n  }, review.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this));\n  const userId = user[0].id;\n  const [review, setReview] = useState('');\n  const formData = {\n    user_id: userId,\n    book_id: book.id,\n    review\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:3001/api/v1/reviews\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    onReview();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: book.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: book.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: book.publisher\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: book.genre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reviews:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Leave a Review!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"textarea\",\n                name: \"review\",\n                value: review,\n                placeholder: \"Neat read!\",\n                onChange: e => setReview(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Leave Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), reviewComponents]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookReview, \"AWhD95b/TzwxBWH0tZXsSVAFSqU=\", false, function () {\n  return [useHistory];\n});\n\n_c = BookReview;\nexport default BookReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookReview\");","map":{"version":3,"sources":["/Users/lee/Flatiron/code2/bookclubfrontend/src/BookSearch/BookReview.js"],"names":["React","useState","ReviewCard","useHistory","BookReview","user","book","reviews","allUsers","onReview","setReviews","history","filteredReviews","filter","review","book_id","id","reviewComponents","map","user_id","userId","setReview","formData","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","title","author","publisher","genre","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport ReviewCard from './ReviewCard'\nimport {useHistory} from 'react-router-dom';\n\nfunction BookReview({user, book, reviews, allUsers, onReview, setReviews}){\n\n    const history = useHistory()\n    const filteredReviews = reviews.filter((review) => review.book_id === book.id)\n\n    const reviewComponents = filteredReviews.map((review) => \n        <ReviewCard\n        key={review.id}\n        review={review.review}\n        allUsers={allUsers}\n        user_id={review.user_id}\n        book_id={review.book_id}\n        />\n    )\n    const userId = user[0].id\n    const [review, setReview] = useState('')\n    const formData = {user_id: userId, book_id: book.id, review}\n\n\n    function handleSubmit(event){\n        event.preventDefault()\n        fetch(\"http://localhost:3001/api/v1/reviews\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        })\n            onReview()\n    }\n\n    return(\n        <div>\n            <div>\n            {book.title}\n            </div>\n            <div>\n            {book.author}\n            </div>\n            <div>\n            {book.publisher}\n            </div>\n            <div>\n            {book.genre}\n            </div>\n            <br/>\n            <br/>\n            <h2>Reviews:</h2>\n            <form onSubmit={handleSubmit}>\n                <table>\n                    <tbody>\n                    \n                        <tr>\n                            <td>\n                                <h4>Leave a Review!</h4>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <label>Review</label>\n                            </td>\n                            <td>\n                                <input\n                                    type=\"textarea\"\n                                    name=\"review\"\n                                    value={review}\n                                    placeholder=\"Neat read!\"\n                                    onChange={(e) => setReview(e.target.value)}\n                                />\n                            </td>\n                        </tr>  \n                    </tbody>\n                </table>\n                <input type=\"submit\" value=\"Leave Review\" />\n            </form>\n            {reviewComponents}\n        </div>\n    )\n}\n\nexport default BookReview;"]},"metadata":{},"sourceType":"module"}