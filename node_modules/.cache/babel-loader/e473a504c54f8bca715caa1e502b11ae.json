{"ast":null,"code":"var _jsxFileName = \"/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/ClubMeeting.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MeetingCard from './MeetingCard';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ClubMeeting({\n  currentClub,\n  user,\n  allUsers,\n  meetings\n}) {\n  _s();\n\n  const history = useHistory();\n  const filteredMeetings = meetings.filter(meeting => meeting.club_id === currentClub.id);\n  const meetingComponents = filteredMeetings.map(meeting => /*#__PURE__*/_jsxDEV(MeetingCard, {\n    description: meeting.description,\n    allUsers: allUsers,\n    club_id: meeting.club_id,\n    zoom: review.zoom\n  }, meeting.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this));\n  const userId = user[0].id;\n  const [zoom, setZoom] = useState('');\n  const [description, setDescription] = useState('');\n  const formData = {\n    user_id: userId,\n    club_id: currentClub.id,\n    zoom,\n    description\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:3001/api/v1/meetings\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(r => r.json()).then(newMeeting => {\n      setReviews([...reviews, newReview]);\n      alert('Review Created!');\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentClub.title, \" Meetings\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ClubMeeting, \"dxXr4rnlTnixyUe5+nAdNDdNpgI=\", false, function () {\n  return [useHistory];\n});\n\n_c = ClubMeeting;\nexport default ClubMeeting;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClubMeeting\");","map":{"version":3,"sources":["/Users/lee/Flatiron/code2/bookclubfrontend/src/ClubSearch/ClubMeeting.js"],"names":["React","useState","MeetingCard","useHistory","ClubMeeting","currentClub","user","allUsers","meetings","history","filteredMeetings","filter","meeting","club_id","id","meetingComponents","map","description","review","zoom","userId","setZoom","setDescription","formData","user_id","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","newMeeting","setReviews","reviews","newReview","alert","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA,WAAD;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,QAApB;AAA8BC,EAAAA;AAA9B,CAArB,EAA6D;AAAA;;AAEzD,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,gBAAgB,GAAGF,QAAQ,CAACG,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACC,OAAR,KAAoBR,WAAW,CAACS,EAA7D,CAAzB;AAEA,QAAMC,iBAAiB,GAAGL,gBAAgB,CAACM,GAAjB,CAAsBJ,OAAD,iBAC3C,QAAC,WAAD;AAEA,IAAA,WAAW,EAAEA,OAAO,CAACK,WAFrB;AAGA,IAAA,QAAQ,EAAEV,QAHV;AAIA,IAAA,OAAO,EAAEK,OAAO,CAACC,OAJjB;AAKA,IAAA,IAAI,EAAEK,MAAM,CAACC;AALb,KACKP,OAAO,CAACE,EADb;AAAA;AAAA;AAAA;AAAA,UADsB,CAA1B;AASA,QAAMM,MAAM,GAAGd,IAAI,CAAC,CAAD,CAAJ,CAAQQ,EAAvB;AACA,QAAM,CAACK,IAAD,EAAOE,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,WAAD,EAAcK,cAAd,IAAgCrB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMsB,QAAQ,GAAG;AAACC,IAAAA,OAAO,EAAEJ,MAAV;AAAkBP,IAAAA,OAAO,EAAER,WAAW,CAACS,EAAvC;AAA2CK,IAAAA,IAA3C;AAAiDF,IAAAA;AAAjD,GAAjB;;AAGA,WAASQ,YAAT,CAAsBC,KAAtB,EAA4B;AACxBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFkC;AAK3CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf;AALqC,KAA1C,CAAL,CAOCW,IAPD,CAOMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAPX,EAQCF,IARD,CAQOG,UAAD,IAAgB;AAClBC,MAAAA,UAAU,CAAC,CAAC,GAAGC,OAAJ,EAAYC,SAAZ,CAAD,CAAV;AACAC,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACH,KAXD;AAYH;;AAED,sBACI;AAAA,eACKpC,WAAW,CAACqC,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA1CQtC,W;UAEWD,U;;;KAFXC,W;AA2CT,eAAeA,WAAf","sourcesContent":["import React,{useState} from 'react'\nimport MeetingCard from './MeetingCard'\nimport {useHistory} from 'react-router-dom';\n\nfunction ClubMeeting({currentClub, user, allUsers, meetings}){\n    \n    const history = useHistory()\n    const filteredMeetings = meetings.filter((meeting) => meeting.club_id === currentClub.id)\n\n    const meetingComponents = filteredMeetings.map((meeting) => \n        <MeetingCard\n        key={meeting.id}\n        description={meeting.description}\n        allUsers={allUsers}\n        club_id={meeting.club_id}\n        zoom={review.zoom}\n        />\n    )\n    const userId = user[0].id\n    const [zoom, setZoom] = useState('')\n    const [description, setDescription] = useState('')\n    const formData = {user_id: userId, club_id: currentClub.id, zoom, description}\n\n\n    function handleSubmit(event){\n        event.preventDefault()\n        fetch(\"http://localhost:3001/api/v1/meetings\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        })\n        .then(r => r.json())\n        .then((newMeeting) => {\n            setReviews([...reviews,newReview])\n            alert('Review Created!')\n        })\n    }\n\n    return(\n        <div>\n            {currentClub.title} Meetings\n\n        </div>\n    )\n}\nexport default ClubMeeting;"]},"metadata":{},"sourceType":"module"}